let gameSeq = []; // Stores the sequence generated by the game
let userSeq = []; // Stores the sequence entered by the user

let btns = ["red", "green", "blue", "yellow"]; // Available button colors

let started = false; // Tracks if the game has started
let level = 0; // Current level (score)

let h2 = document.querySelector("h2"); // Heading element to display messages

// Start the game when any key is pressed
document.addEventListener("keypress", function () {
  if (started == false) {
    console.log("Game Started");
    started = true;
    levelUp();
  }
});

// Function to flash a button (game sequence flash)
function gameFlash(btn) {
  btn.classList.add("flash");
  setTimeout(function () {
    btn.classList.remove("flash");
  }, 250);
}

// Function to flash a button when user clicks
function userFlash(btn) {
  btn.classList.add("userFlash");
  setTimeout(function () {
    btn.classList.remove("userFlash");
  }, 250);
}

// Function to go to next level
function levelUp() {
  userSeq = []; // Reset user sequence for the new level

  level++; // Increase level count
  h2.innerText = "Level " + level; // Update heading with current level

  // Pick a random button
  let randIdx = Math.floor(Math.random() * 3);
  let randColor = btns[randIdx];
  let randBtn = document.querySelector(`.${randColor}`);

  gameSeq.push(randColor); // Add random color to game sequence
  console.log(gameSeq);

  gameFlash(randBtn); // Flash the chosen button
}

// Function to check user's answer
function checkAns(idx) {
  if (userSeq[idx] === gameSeq[idx]) {
    // If user has completed the sequence correctly, move to next level
    if (userSeq.length === gameSeq.length) {
      setTimeout(levelUp, 1000);
    }
  } else {
    // Update highest score if current score is greater
    if (level > highScore) {
      highScore = level;
    }

    // Show game over message with current score & high score
    h2.innerHTML = `Game Over! Your score was <b>${level}</b> <br> Press Any Key to Restart`;

    // Flash red background for game over effect
    document.querySelector("body").style.backgroundColor = "red";
    setTimeout(function () {
      document.querySelector("body").style.backgroundColor = "white";
    }, 500);

    restart(); // Restart game variables
  }
}

// Function for button press (user action)
function btnPress() {
  let btn = this;
  userFlash(btn); // Flash button when user clicks

  usercolor = btn.getAttribute("id"); // Get color from button id
  userSeq.push(usercolor); // Add user's choice to sequence

  checkAns(userSeq.length - 1); // Check if user clicked correct button
}

// Add event listener to all buttons
let allBtns = document.querySelectorAll(".btn");
for (btn of allBtns) {
  btn.addEventListener("click", btnPress);
}

// Restart function to reset values
function restart() {
    started = false;
    level = 0;
    gameSeq = [];
    userSeq = [];
}


